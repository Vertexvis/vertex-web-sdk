{"version":3,"file":"math.js","sourceRoot":"","sources":["../../../../geometry/src/math.ts"],"names":[],"mappings":"AAAA;;;;;;;GAOG;AACH,MAAM,UAAU,KAAK,CAAC,KAAa,EAAE,GAAW,EAAE,GAAW;EAC3D,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;AAC7C,CAAC;AAED;;;;;;;;;GASG;AACH,MAAM,UAAU,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS;EAClD,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC","sourcesContent":["/**\n * Clamps the given value between `min` and `max`.\n *\n * @param value The value to clamp.\n * @param min The min possible value.\n * @param max The max possible value.\n * @returns `value` or a value clamped to `min` or `max`.\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * Linear interpolates a value between `a` and `b` by `t`. If `t` is 0, then the\n * result will be `a`. If `t` is 1, then the result will be `b`. `t` will be\n * clamped to a value between 0 and 1.\n *\n * @param a The start value.\n * @param b The end value.\n * @param t The interpolation value between 0 and 1.\n * @returns The interpolated value between `a` and `b`.\n */\nexport function lerp(a: number, b: number, t: number): number {\n  t = clamp(t, 0, 1);\n  return t * (b - a) + a;\n}\n"]}