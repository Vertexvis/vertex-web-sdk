:host {
  /**
   * @prop --viewer-distance-measurement-accent-color: A CSS color that
   * specifies the color of lines, anchors and borders.
   */
  --viewer-distance-measurement-accent-color: var(--neutral-900);

  /**
   * @prop --viewer-distance-measurement-contrast-color: A CSS color that
   * specifies a color opposite of the accent color.
   */
  --viewer-distance-measurement-contrast-color: var(--white);

  /**
   * @prop --viewer-distance-measurement-invalid-accent-color: A CSS color that
   * specifies the color of lines, anchors and borders when the measurement is
   * invalid.
   */
  --viewer-distance-measurement-invalid-accent-color: var(--red-600);

  /**
   * @prop --viewer-distance-measurement-invalid-contrast-color: A CSS color
   * that specifies a color opposite of the accent color when the measurement
   * is invalid.
   */
  --viewer-distance-measurement-invalid-contrast-color: var(--white);

  /**
   * @prop --viewer-distance-measurement-line-stroke-width: A CSS length that
   * width of the measurement line's stroke.
   */
  --viewer-distance-measurement-line-stroke-width: 1.25px;

  /**
   * @prop --viewer-distance-measurement-line-fill-width: A CSS length that
   * width of the measurement line's fill.
   */
  --viewer-distance-measurement-line-fill-width: 2px;

  /**
   * @prop --viewer-distance-measurement-distance-border: A CSS border that
   * specifies the border color or image for the measurement's label.
   */
  --viewer-distance-measurement-distance-border: 1px solid
    var(--viewer-distance-measurement-accent-color);

  /**
   * @prop --viewer-distance-measurement-distance-border-radius: A CSS length
   * that specifies the border radius for the measurement's label.
   */
  --viewer-distance-measurement-distance-border-radius: 0.25rem;

  /**
   * @prop --viewer-distance-measurement-distance-padding: A CSS length that
   * specifies the padding of the measurement's label.
   */
  --viewer-distance-measurement-distance-padding: 0.375rem 0.5rem;

  color: var(--viewer-distance-measurement-accent-color);
  font-size: 0.75rem;
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

:host([invalid]) {
  --viewer-distance-measurement-accent-color: var(
    --viewer-distance-measurement-invalid-accent-color
  ) !important;

  --viewer-distance-measurement-contrast-color: var(
    --viewer-distance-measurement-invalid-contrast-color
  ) !important;
}

.measurement {
  position: absolute;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.line {
  --viewer-measurement-line-stroke: var(
    --viewer-distance-measurement-contrast-color
  );
  --viewer-measurement-line-stroke-opacity: 0.75;
  --viewer-measurement-line-stroke-width: var(
    --viewer-distance-measurement-line-stroke-width
  );
  --viewer-measurement-line-fill: var(
    --viewer-distance-measurement-accent-color
  );
  --viewer-measurement-line-fill-width: var(
    --viewer-distance-measurement-line-fill-width
  );

  position: absolute;
  width: 100%;
  height: 100%;
}

.anchor {
  position: absolute;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  display: block;
}

:host(:not([mode='replace'])) .anchor,
:host(:not([mode='replace'])) .anchor-label,
:host(:not([mode='replace'])) .distance-label {
  pointer-events: auto;
}

:host([interacting-anchor='start']) .anchor-start,
:host([interacting-anchor='start']) .anchor-label-start {
  visibility: hidden;
}
:host([interacting-anchor='start']) .line-fill,
:host([interacting-anchor='start']) .line-stroke {
  --viewer-measurement-line-start-cap-visibility: hidden;
}

:host([interacting-anchor='end']) .anchor-end,
:host([interacting-anchor='end']) .anchor-label-end {
  visibility: hidden;
}
:host([interacting-anchor='end']) .line-fill,
:host([interacting-anchor='end']) .line-stroke {
  --viewer-measurement-line-end-cap-visibility: hidden;
}

.anchor-label {
  position: absolute;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  display: block;
}

:host([mode='edit']) {
  cursor: inherit;
}
:host([mode='edit']) .anchor {
  cursor: move;
}

:host(:not([mode='edit'])) .anchor {
  visibility: hidden;
}

.anchor-placeholder {
  background: var(--viewer-distance-measurement-contrast-color);
  width: 12px;
  height: 12px;
  border-radius: 50%;
  box-sizing: border-box;
}

:host([mode='edit']) .anchor-placeholder {
  border: 2px solid var(--viewer-distance-measurement-accent-color);
  background: var(--viewer-distance-measurement-contrast-color);
}

:host([mode='']) .distance-label {
  color: var(--viewer-distance-measurement-contrast-color);
  background: var(--viewer-distance-measurement-accent-color);
}

.distance-label {
  position: absolute;
  background: var(--viewer-distance-measurement-contrast-color);
  border: var(--viewer-distance-measurement-distance-border);
  border-radius: var(--viewer-distance-measurement-distance-border-radius);
  padding: var(--viewer-distance-measurement-distance-padding);
}

.indicator {
  position: absolute;
}

.indicator-placeholder {
  background: var(--viewer-distance-measurement-accent-color);
  border: 1px solid var(--viewer-distance-measurement-contrast-color);
  width: 6px;
  height: 6px;
  border-radius: 50%;
  box-sizing: border-box;
}
